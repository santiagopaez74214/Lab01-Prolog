<div class="notebook">

<div class="nb-cell program" name="p1">
%Ejercicio 6 - Listas
%Escribe una regla que verifique si un elemento es miembro de una lista.
miembro(X,[X|_]).
miembro(X,[_|R]):-miembro(X,R).

%Escribe una regla "longitud" que dada una lista, calcule su longitud.
longitud([], 0).        
longitud([_|X], N) :- 
    longitud(X, N1),
    N is N1 + 1.

%Escribe una regla "concatena" que dadas dos listas, las concatene en otra.
concatenar([],L,L).
concatenar([X|L1],L2,[X,L3]):- concatenar(L1,L2,L3).

%Escribe uan regla que determine el reverso de una lista.
inversa(L1,X):- inversa(L1,[],X).
inversa([],X,X).
inversa([X|L1],L2,L3):- inversa(L1,[X|L2],L3).

%Escribe una regla que permite obtener en una lista los N elementos de las serie de fibonacci, usa la regla predifina append(L1,L2,L3), que concatena L1 y L2, en L3.


%Escribe una regla que determine si una lista es palindroma.
es_palindroma(X):-inversa(X,X).
</div>

</div>
